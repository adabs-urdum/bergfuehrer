// wrap your code in a mixin
@mixin header($type: "") {
  // get Basesize in correct relation to design width
  $BS: getBaseSize($type);

  // define the styles of your component as designed
  .header {
    position: relative;
    height: 25vh;
    width: 100%;
    color: $White;

    a {
      text-transform: uppercase;
      text-shadow: 0 0 $BS * 8 transparentize($Black, 0.5);
      @include bsFontSize($BS, 24);
      font-weight: 700;
      transition: color 0.2s ease-out;

      &:after {
        display: none;
        // border-bottom: solid 2px $White;
        // transition: width 0.2s ease-out;
        // width: 0;
      }

      &:hover {
        color: $Black;
        //   &::after {
        //     width: 100%;
        //   }
      }
    }

    li {
      position: relative;

      &.current_page_item {
        a {
          &::after {
            width: 100%;
          }
        }
      }
      &::before {
        display: none;
      }
    }

    &__wrapper {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: flex-end;
      height: 100%;
      padding: $BS * 32;
      max-width: $WidthWide;
      margin: 0 auto;
    }

    &__image {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;

      @supports (object-fit: cover) {
        object-fit: cover;
        height: 100%;
      }
    }

    &__mobileNavCheckbox,
    &__mobileNavLabel {
      display: none;
      cursor: pointer;
    }

    &__menu {
      display: flex;

      ul {
        display: flex;
      }

      & > li {
        margin: 0 $BS * 16;
        padding: 0;

        &:last-child {
          margin-right: 0;
        }

        &:hover {
          & > a {
            position: relative;
            z-index: 25;
            color: $Black;
          }
          .sub-menu {
            max-height: 100vh;
            padding-top: $BS * 40;
            padding-bottom: $BS * 8;
          }
        }
      }

      li {
        padding: $BS * 4 $BS * 16;
      }

      .sub-menu {
        position: absolute;
        left: 0;
        top: 0;
        flex-direction: column;
        padding-top: 0;
        padding-bottom: 0;
        background-color: transparentize($Black, 0.5);
        z-index: 20;
        overflow: hidden;
        max-height: 0vh;
        transition: max-height 0.2s ease, padding-top 0.2s ease-out,
          padding-bottom 0.2s ease-out;
      }
    }
  }
  .home {
    .header {
      height: 100vh;

      a {
        @include bsFontSize($BS, 32);
      }

      &__wrapper {
        align-items: center;
        justify-content: center;
      }

      &__logoWrapper {
        display: none;
      }

      &__menu {
        .sub-menu {
          top: auto;
          bottom: 0;
          transform: translateY(100%);
          transition: max-height 0.2s ease-out, padding-top 0.2s ease-out;
        }

        & > li {
          &:hover {
            .sub-menu {
              padding-top: 0;
            }
          }
        }
      }
    }
  }
}

// Render basic styles as designed
@include header();

// Render basic styles with breakpoints
@each $Breakpoint in $Breakpoints {
  @include breakpoint(#{$Breakpoint}) {
    @include header(#{$Breakpoint});
  }
}

// Render custom styles with breakpoints
@include breakPointXS() {
  $BS: getBaseSize("XS");

  .header {
    &__nav {
      position: fixed;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.5);
      z-index: 90;
      transform: translateX(100%);
      transition: transform 0.5s ease-out;
    }

    &__mobileNavLabel {
      position: relative;
      display: block;
      z-index: 100;
    }

    &__mobileNavCheckbox {
      &:checked {
        & ~ .header {
          &__nav {
            transform: translateX(0);
          }
        }
      }
    }
  }
}
