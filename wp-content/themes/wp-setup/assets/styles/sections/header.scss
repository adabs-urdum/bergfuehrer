// wrap your code in a mixin
@mixin header($type: "") {
  // get Basesize in correct relation to design width
  $BS: getBaseSize($type);

  // define the styles of your component as designed
  .header {
    position: relative;
    height: 25vh;
    width: 100%;
    color: $White;
    // overflow: hidden;

    &__logoLink {
      display: flex;
      align-items: flex-end;

      & > div {
        position: relative;

        canvas {
          width: $BS * 128;
        }

        svg {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }
      }
    }

    a {
      text-transform: uppercase;
      text-shadow: 0 0 $BS * 8 transparentize($ColorDark, 0.5);
      @include bsFontSize($BS, 24);
      font-weight: 700;
      transition: color 0.2s ease-out;

      &:after {
        display: none;
        // border-bottom: solid 2px $White;
        // transition: width 0.2s ease-out;
        // width: 0;
      }

      &:hover {
        color: $ColorDark;
        //   &::after {
        //     width: 100%;
        //   }
      }
    }

    li {
      position: relative;

      &.current_page_item {
        a {
          &::after {
            width: 100%;
          }
        }
      }
      &::before {
        display: none;
      }
    }

    &__wrapper {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: flex-end;
      height: 100%;
      padding: $BS * 32;
      max-width: $WidthWide;
      margin: 0 auto;
    }

    &__imageWrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    &__image {
      position: absolute;
      left: 50%;
      top: 50%;
      width: 100%;
      transform: translate(-50%, -60%);
    }

    &__mobileNavCheckbox,
    &__mobileNavLabel {
      display: none;
      cursor: pointer;
    }

    &__menu {
      display: flex;

      ul {
        display: flex;
      }

      & > li {
        margin: 0 $BS * 16;
        padding: 0;

        &:last-child {
          margin-right: 0;
        }

        &:hover {
          & > a {
            position: relative;
            z-index: 25;
            color: $ColorDark;
          }
          .sub-menu {
            max-height: 100vh;
            padding-top: $BS * 40;
            padding-bottom: $BS * 8;
          }
        }
      }

      li {
        padding: $BS * 4 $BS * 16;
      }

      .sub-menu {
        position: absolute;
        left: 0;
        top: 0;
        flex-direction: column;
        padding-top: 0;
        padding-bottom: 0;
        background-color: transparentize($ColorDark, 0.5);
        z-index: 20;
        overflow: hidden;
        max-height: 0vh;
        transition: max-height 0.2s ease, padding-top 0.2s ease-out,
          padding-bottom 0.2s ease-out;
      }
    }
  }

  .home {
    .header {
      height: 100vh;

      a {
        @include bsFontSize($BS, 32);
      }

      &__wrapper {
        align-items: center;
        justify-content: center;
        flex-direction: column;
        transform: translateY($BS * -200);
      }

      &__logoWrapper {
        // position: absolute;
        bottom: $BS * 64;
        left: $BS * 32;
        // display: none;
        margin-bottom: $BS * 56;
        canvas {
          width: $BS * 200;
        }
      }

      &__image {
        transform: translate(-50%, -50%);
        width: auto;
        min-height: 100%;
        min-width: 100%;

        // @supports (object-fit: cover) {
        //   object-fit: cover;
        //   height: 100%;
        // }
      }

      &__menu {
        margin-bottom: 0;
        .sub-menu {
          top: auto;
          bottom: 0;
          transform: translateY(100%);
          transition: max-height 0.2s ease-out, padding-top 0.2s ease-out;
        }

        & > li {
          &:hover {
            .sub-menu {
              padding-top: 0;
            }
          }
        }
      }
    }
  }
}

// Render basic styles as designed
@include header();

// Render basic styles with breakpoints
@each $Breakpoint in $Breakpoints {
  @include breakpoint(#{$Breakpoint}) {
    @include header(#{$Breakpoint});
  }
}

// Render custom styles with breakpoints
@include breakPointM() {
  $BS: getBaseSize("M");

  .home {
    .header {
      &__image {
        transform: translate(-60%, -50%);
      }
    }
  }
}

@include breakPointS() {
  $BS: getBaseSize("S");

  body:not(.home) {
    .header {
      &__wrapper {
        align-items: flex-start;
        justify-content: space-between;
      }

      &__nav {
        position: fixed;
        display: flex;
        justify-content: space-between;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: $White;
        z-index: 501;
        transform: translateX(100%);
        transition: transform 0.2s ease-out;
        padding: $BS * 32;
      }

      &__menu {
        flex-direction: column;

        li {
          padding-left: 0;
          margin-left: 0;

          a {
            color: $Black;
            text-shadow: none;
          }

          &:hover {
            .sub-menu {
              padding: 0;
              padding-left: $BS * 32;
            }
          }
        }

        .sub-menu {
          position: relative;
          max-height: none;
          transform: translateY(0);
          background-color: transparent;
          padding-left: $BS * 32;
        }
      }

      &__mobileNavLabel {
        position: relative;
        display: block;

        canvas {
          width: $BS * 64;
        }

        svg {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;

          path {
            stroke: $White;
          }
        }
      }

      &__mobileNavCheckbox {
        &:checked {
          & ~ .header {
            &__nav {
              transform: translateX(0);
            }
          }
        }
      }

      &__image {
        transform: translate(-50%, -50%);
        min-width: 100%;
        min-height: 100%;
        width: auto;
      }
    }
  }

  .home {
    .header {
      &__wrapper {
        // align-items: flex-start;
        // justify-content: space-between;
      }

      &__menu {
        .sub-menu {
          transform: translateY(0);
        }
      }

      &__logoWrapper {
        margin-right: 0;
      }
    }
  }
}

@include breakPointXS() {
  $BS: getBaseSize("XS");

  .header {
    &__menu {
      flex-direction: column;
      text-align: center;
    }
  }
}
