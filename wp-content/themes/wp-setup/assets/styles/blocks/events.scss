// Styles
// name mixin after scss events
@mixin events($type: "") {
  // get Basesize in correct relation to design width
  $BS: getBaseSize($type);

  .events {
    &__event {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: stretch;
      background-color: $ColorLightest;
      margin-bottom: $BS * 64;
      opacity: 0;
      animation: fadein forwards 0.2s ease-out;
      @keyframes fadein {
        0% {
          opacity: 0;
          transform: translateY(-10%);
        }
        100% {
          opacity: 1;
          transform: translateY(0);
        }
      }

      &::after {
        display: none;
      }

      &:hover {
        img {
          transform: scale(1.05);
        }
      }
    }

    &__events {
      margin-top: $BS * 64;
    }

    &__price {
      margin-bottom: $BS * 64;
    }

    &__prices {
      display: flex;
      margin-bottom: $BS * 16;

      span {
        margin-right: $BS * 8;
      }
      p {
        margin: 0;
      }
    }

    &__imageWrapper {
      position: relative;
      width: 40%;
      overflow: hidden;

      img {
        width: 100%;
        transition: transform 0.2s ease-out;

        @supports (object-fit: cover) {
          position: absolute;
          top: 0;
          left: 0;
          object-fit: cover;
          width: 100%;
          height: 100%;
        }
      }
    }

    &__textWrapper {
      width: 60%;
      padding: $BS * 32 $BS * 64 $BS * 32;

      h3 {
        margin-top: 0;
        margin-bottom: $BS * 8;
      }

      h4 {
        margin-bottom: $BS * 8;
      }
    }

    &__difficultyWrapper {
      display: flex;
      margin-bottom: $BS * 32;
    }

    &__techniqueWrapper,
    &__fitnessWrapper {
      display: flex;
      flex-direction: column;
    }

    &__techniqueWrapper {
      margin-right: $BS * 32;
    }

    &__icons {
      display: flex;
      margin: 0 $BS * -4;
    }

    &__icon {
      display: block;
      width: $BS * 24;
      height: $BS * 24;
      border-radius: 50%;
      border: solid 1px $Black;
      margin: 0 $BS * 4;

      &.full {
        background-color: $Black;

        &--5 {
          background-color: transparent;
          background-image: linear-gradient(
            90deg,
            $Black 0,
            $Black 50%,
            transparent 0
          );
        }
      }
    }

    &__additionalInfo {
      margin: $BS * 64 0;
    }

    &__loaderWrapper {
      display: flex;
      justify-content: center;
      margin: $BS * 64 0;
    }

    &__loader {
      display: inline-block;
      position: relative;
      width: $BS * 120;
      height: $BS * 120;
      div {
        box-sizing: border-box;
        display: block;
        position: absolute;
        width: $BS * 100;
        height: $BS * 100;
        margin: $BS * 8;
        border: $BS * 8 solid $ColorLight;
        border-radius: 50%;
        animation: loaderrotation 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        border-color: $ColorDark transparent transparent transparent;
        &:nth-child(1) {
          animation-delay: -0.45s;
        }
        &:nth-child(2) {
          animation-delay: -0.3s;
        }
        &:nth-child(3) {
          animation-delay: -0.15s;
        }
      }
      @keyframes loaderrotation {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    }

    &__filtersWrapper {
      display: flex;
    }

    &__filters {
      position: relative;
      z-index: 5000;
      background-color: #fff;

      @supports (position: sticky) {
        position: sticky;
        top: 0;
        padding-top: $BS * 32;
        padding-bottom: $BS * 16;
        z-index: 101;
      }
    }

    &__filter {
      position: relative;
      margin-right: $BS * 16;
    }

    &__label {
      position: relative;
      display: block;
      min-width: $BS * 128;
      padding: $BS * 8;
      padding-right: $BS * 64;
      margin-bottom: $BS * 16;
      border: solid 1px $ColorDark;
      cursor: pointer;
      background-color: $ColorLightest;
    }

    &__lower {
      position: absolute;
      left: 0;
      bottom: $BS * 9;
      display: flex;
      flex-direction: column;
      transform: translateY(100%);
      background-color: $ColorLightest;
      padding: $BS * 16;
      display: none;
      min-width: 100%;
      border: solid 1px $ColorDark;
      z-index: 5000;

      input {
        // display: none;
      }
    }

    &__trigger {
      display: none;

      &:checked {
        & ~ .events__lower {
          display: block;
        }

        & ~ .events__label {
          border-bottom-color: $ColorLightest;
          z-index: 5001;
          padding-bottom: $BS * 16;
          margin-bottom: 0;
        }
      }
    }

    &__choices {
      li {
        display: flex;
        align-items: center;
        padding-left: 0;

        &::before {
          display: none;
        }
      }
      input {
        display: none;

        &:checked {
          & ~ .events__choice {
            background-color: $ColorLight;

            &::after {
              position: absolute;
              top: 50%;
              right: $BS * 8;
              content: "\002714";
              transform: translateY(-50%);
            }
          }
        }
      }
    }

    &__choice {
      position: relative;
      display: flex;
      justify-content: space-between;
      padding: $BS * 8;
      padding-right: $BS * 48;
      line-height: 100%;
      cursor: pointer;
      width: 100%;

      span {
        white-space: nowrap;
      }
    }

    &__rangeContainer {
      position: relative;
      min-width: $BS * 375;
    }

    &__rangeNumbers {
      display: flex;
      justify-content: space-between;
      margin-bottom: $BS * 16;

      input[type="number"],
      input[type="text"] {
        width: $BS * 128;
      }
    }

    &__rangeSlider {
      width: 100%;
    }

    &__rangeBullet {
      span {
        display: block;
        top: 1px;
        height: $BS * 32;
        width: $BS * 32;
        background-color: $Black;
        border-radius: 50%;
        // transform: translateY(-50%);
        cursor: grab;
      }

      &--min {
        left: 0;
      }

      &--max {
        right: 0;
      }
    }

    #filterTrigger {
      display: none;
    }

    .noUi-handle {
      border: none;
      background-color: $Black;
      box-shadow: none;
      border-radius: 50%;

      &::after,
      &::before {
        display: none;
      }
    }

    .noUi-horizontal {
      height: $BS * 4;
      border: none;
      box-shadow: none;
      background-color: $Black;
      .noUi-handle {
        width: $BS * 16;
        height: $BS * 16;
        right: $BS * -8;
        top: $BS * -6;
      }
    }
  }
}

// Add events
@include events();

// Add basic events with breakpoints
@each $Breakpoint in $Breakpoints {
  @include breakpoint(#{$Breakpoint}) {
    @include events(#{$Breakpoint});
  }
}

@include breakPointS() {
  $BS: getBaseSize("S");

  .events {
    &__event {
      flex-direction: column-reverse;
    }

    &__imageWrapper {
      width: 100%;
      height: 25vh;
    }

    &__textWrapper {
      width: 100%;
      padding: $BS * 32 $BS * 64;
    }

    &__filters {
      max-height: 100vh;
      box-sizing: border-box;

      .button {
        margin: 0;
      }
    }

    &__filtersWrapper {
      position: absolute;
      left: 0;
      flex-direction: column;
      max-height: 93vh;
      overflow: auto;
      padding-top: 2.5vh;
      padding-bottom: 5vh;
      transform: translateX(-100vw);
      transition: transform 0.2s ease-out;
      width: 100%;
      background-color: #fff;
      // display: none;
    }

    &__filter {
      margin-right: 0;

      label {
        margin-top: $BS * 32;
        margin-bottom: 0;
      }
    }

    #filterTrigger {
      &:checked {
        & + .events__filtersWrapper {
          // display: block;
          transform: translateX(0%);
        }
      }
    }

    &__trigger {
      ~ .events__lower {
        position: relative;
        display: block !important;
        transform: translateY(0);
      }
    }
  }
}
